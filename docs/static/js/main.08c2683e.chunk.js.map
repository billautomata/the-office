{"version":3,"sources":["js/lib/cleanUpLines.js","js/lib/generateTreemap.js","js/lib/initializeBubbleData.js","js/lib/updateBubbleData.js","js/constants/action-types.js","js/store/reducers/index.js","js/store/index.js","js/actions/index.js","data/the-office-lines-scripts.csv","data/the-office-series.csv","js/components/LineSearch-components/Bubbles.js","js/components/LineSearch-components/Instructions.js","js/components/LineSearch-components/ResultsFoundCount.js","js/components/LineSearch-components/Matches.js","img/the-office.svg","js/components/LineSearch-components/QuoteInput.js","js/components/LineSearch-components/Treemap.js","img/blind-guy-mcsqueezy.jpeg","js/components/loading-screens/Maze.js","js/components/LineSearch.js","js/components/App.js","App.js","reportWebVitals.js","index.js"],"names":["cleanUpLines","lines","charactersToRemove","filteredLines","filter","o","deleted","i","length","id","String","forEach","line","search_text","line_text","replace","RegExp","c","idx","replaceAll","split","join","generateTreemap","matches","treeMapDimensions","characters","reduce","accumulator","object","undefined","speaker","name","value","seasonEpisodes","push","season","episode","d3","tile","ratio","size","padding","round","children","Object","values","sum","d","sort","a","b","leaves","buildEmptyBubbleData","series","seasons","Season","episodes","episodeCount","toArray","obj","objIndex","updateBubbleData","bubbleData","filteredCharacter","newBubbleData","map","match","Number","ADD_LINES","ADD_SERIES","CHARACTER_FILTER","EXPAND_ALL_LINES","EXPAND_LINE","FIND_MATCHES","FINISH_LOADING","SET_QUOTE","initialState","expandedMatches","finishedLoading","treemapLeaves","quote","rootReducer","state","action","type","payload","assign","initializeBubbleData","updatedBubbleDataFilteredCharacter","allExpandedMatches","matchIdx","n","indexOf","toLowerCase","trim","updatedBubbleData","store","createStore","findMatches","Bubbles","connect","ownProps","dispatch","Grid","item","xs","style","width","height","userSelect","transform","seasonIdx","x","y","dy","fontSize","fontWeight","letterSpacing","fill","textAnchor","x1","y1","x2","y2","stroke","strokeWidth","episodeIdx","cursor","onClick","reference","document","getElementById","window","scrollTo","top","offsetTop","behavior","cx","cy","r","Array","Instructions","props","container","textAlign","lineHeight","color","href","marginLeft","ResultsFoundCount","resultsFound","justifyContent","marginRight","Matches","expandAllLines","expandLine","margin","alignItems","marginBottom","textDecoration","matchIndex","expandedMatch","borderRadius","backgroundColor","EpisodeTitle","previousLine","nextLine","QuoteInput","setQuote","TextField","label","variant","defaultValue","onChange","event","nativeEvent","target","onKeyUp","code","Treemap","setFilteredCharacter","characterFilter","position","leaf","leafIdx","y0","left","x0","boxSizing","overflow","border","data","display","SpiralScreen","svgRef","React","createRef","componentWillUnmountFlag","w","h","gridSize","easeFn","svg","this","current","attr","defs","append","lg","gridScale","domain","range","halfGridScale","gParent","gText","text","linesObject","pos","datum","Math","random","self","transitionAll","p","delay","sqrt","pow","transition","wavePeriod","duration","ease","on","ref","Component","LineSearch","marginTop","src","OfficeLogo","alt","BlindGuyMcSqueezy","App","addLines","addSeries","finishLoading","csv","DataOfficeLines","then","DataOfficeSeries","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"mPAAe,SAASA,EAAcC,GAIpC,IAHA,IAAMC,EAAqB,CAAC,IAAI,IAAI,IAAI,IAAI,KACtCC,EAAgBF,EAAMG,QAAO,SAAAC,GAAI,MAAqB,SAAdA,EAAEC,WAExCC,EAAI,EAAGA,EAAIJ,EAAcK,OAASD,IACxCJ,EAAcI,GAAGE,GAAKC,OAAOH,GAU/B,OAPAJ,EAAcQ,SAAQ,SAAAC,GACpBA,EAAKC,YAAcD,EAAKE,UAAUC,QAAQC,OAAO,aAAa,IAC9Dd,EAAmBS,SAAQ,SAACM,EAAEC,GAC5BN,EAAKC,YAAcD,EAAKC,YAAYM,WAAWF,EAAE,QAEnDL,EAAKC,YAAcD,EAAKC,YAAYO,MAAM,KAAKhB,QAAO,SAAAC,GAAC,OAAEA,EAAEG,OAAO,KAAGa,KAAK,QAErElB,E,YCbM,SAASmB,EAAiBC,GACvC,IAAMC,EAA6B,KAA7BA,EAA2C,IAE3CC,EAAaF,EAAQG,QAAO,SAACC,EAAaC,GAO9C,YALmCC,IAAhCF,EAAYC,EAAOE,WACpBH,EAAYC,EAAOE,SAAW,CAAEC,KAAMH,EAAOE,QAASE,MAAO,EAAGC,eAAgB,KAElFN,EAAYC,EAAOE,SAASE,OAAS,EACrCL,EAAYC,EAAOE,SAASG,eAAeC,KAAM,CAACC,OAAQP,EAAOO,OAAQC,QAASR,EAAOQ,UAClFT,IACP,IAQF,OANgBU,MACbC,KAAKD,IAAmBE,MAAM,IAC9BC,KAAK,CAAChB,EAAyBA,IAC/BiB,QAAQ,GACRC,OAAM,EAJOL,CAIDA,IAAa,CAACN,KAAM,GAAIY,SAAUC,OAAOC,OAAOpB,KAAcqB,KAAI,SAAAC,GAAC,OAAIA,EAAEf,SAAOgB,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAElB,MAAQiB,EAAEjB,UAE3GmB,SCrBF,SAASC,EAAsBC,GAC5C,IAAMC,EAAU,GAmBhB,OAlBAD,EAAO1C,SAAQ,SAAAyB,QACkBP,IAA5ByB,EAAQlB,EAAQmB,UACjBD,EAAQlB,EAAQmB,QAAU,CACxBC,SAAU,UAG8B3B,IAAzCyB,EAAQlB,EAAQmB,QAAQE,eACzBH,EAAQlB,EAAQmB,QAAQE,aAAe,GAEzCH,EAAQlB,EAAQmB,QAAQE,cAAgB,KAG1Cb,OAAOC,OAAOS,GAAS3C,SAAQ,SAAAwB,GAC7B,IAAK,IAAI5B,EAAI,EAAGA,EAAI4B,EAAOsB,aAAclD,IACvC4B,EAAOqB,SAAStB,KAAK,MAIlB,CACLoB,QAASI,EAAQJ,IAIrB,SAASI,EAAS9B,GAChB,IAAMvB,EAAI,GAIV,OAHAuC,OAAOC,OAAOjB,GAAQjB,SAAQ,SAACgD,EAAKC,GAClCvD,EAAE6B,KAAKyB,MAEFtD,EC9BM,SAASwD,EAAkBC,EAAYvC,EAASwC,GAC7D,IAAMC,EAAgB,CAAEV,QAAS,IAgBjC,OAfAU,EAAcV,QAAUQ,EAAWR,QAAQW,KAAI,SAAA9B,GAC7C,IAAM9B,EAAI,CAAEmD,SAAU,IAKtB,OAJAnD,EAAEoD,aAAetB,EAAOsB,aACxBtB,EAAOqB,SAAS7C,SAAQ,SAAAyB,GACtB/B,EAAEmD,SAAStB,KAAK,MAEX7B,KAGTkB,EAAQZ,SAAQ,SAAAuD,GACW,OAAtBH,GAA8BA,IAAsBG,EAAMpC,UAC3DkC,EAAcV,QAAQa,OAAOD,EAAM/B,QAAQ,GAAGqB,SAASW,OAAOD,EAAM9B,SAAS,IAAM,MAIhF4B,ECjBF,IAAMI,EAAY,YACZC,EAAa,aACbC,EAAmB,mBACnBC,EAAmB,mBACnBC,EAAc,cACdC,EAAe,eACfC,EAAiB,iBACjBC,EAAY,YCSnBC,EAAe,CACnBd,WAAY,CAAER,QAAS,IACvBuB,gBAAiB,GACjBd,kBAAmB,KACnBe,iBAAiB,EACjB7E,MAAO,GACPsB,QAAS,GACT8B,OAAQ,GACR0B,cAAe,GACfC,MAAO,wBAkDMC,MA/Cf,WAAoD,IAA/BC,EAA8B,uDAAtBN,EAAcO,EAAQ,uCACjD,OAAOA,EAAOC,MACZ,KAAKhB,EACH,IAAMnE,EAAQD,EAAamF,EAAOE,SAClC,OAAOzC,OAAO0C,OAAO,GAAIJ,EAAO,CAAEjF,UACpC,KAAKoE,EACH,IAAMP,EAAayB,EAAqBJ,EAAOE,SAC/C,OAAOzC,OAAO0C,OAAO,GAAIJ,EAAO,CAAE7B,OAAQ8B,EAAOE,QAASvB,eAC5D,KAAKQ,EACH,IAAMkB,EAAqC3B,EAAiBqB,EAAMpB,WAAYoB,EAAM3D,QAAS4D,EAAOE,SACpG,OAAOzC,OAAO0C,OAAO,GAAIJ,EAAO,CAAEnB,kBAAmBoB,EAAOE,QAASvB,WAAY0B,IACnF,KAAKjB,EACH,IAAIkB,EAMJ,OAJEA,GADqB,IAAnBN,EAAOE,QACYH,EAAM3D,QAAQ0C,KAAI,SAACC,EAAMwB,GAAa,OAAOA,KAE7C,GAEhB9C,OAAO0C,OAAO,GAAIJ,EAAO,CAAEL,gBAAiBY,IACrD,KAAKjB,EACH,IAAIK,EAAkBK,EAAML,gBAAgBzE,QAAO,SAAAuF,GAAI,OAAO,KAM9D,OALgD,IAA7Cd,EAAgBe,QAAQT,EAAOE,SAChCR,EAAkBA,EAAgBzE,QAAO,SAAAuF,GAAK,OAAOA,IAAMR,EAAOE,WAElER,EAAgB3C,KAAKiD,EAAOE,SAEvBzC,OAAO0C,OAAO,GAAIJ,EAAO,CAAEL,oBACpC,KAAKJ,EACH,IAAMlD,EAAU2D,EAAMjF,MAAMG,QAAO,SAAAC,GACjC,OAA0D,IAAvD6E,EAAMF,MAAMa,cAAcC,OAAO1E,MAAM,KAAKZ,QACgD,IAAtFH,EAAEQ,YAAYgF,cAAczE,MAAM,KAAKwE,QAAQV,EAAMF,MAAMa,cAAcC,SAEE,IAA3EzF,EAAEQ,YAAYgF,cAAcD,QAAQV,EAAMF,MAAMa,cAAcC,WAGnEC,EAAoBlC,EAAiBqB,EAAMpB,WAAYvC,EAAS,MAChEwD,EAAgBzD,EAAgBC,GACtC,OAAOqB,OAAO0C,OAAO,GAAIJ,EAAO,CAAE3D,UAASuC,WAAYiC,EAAmBlB,gBAAiB,GAAIE,gBAAehB,kBAAmB,OACnI,KAAKW,EACH,OAAO9B,OAAO0C,OAAO,GAAIJ,EAAO,CAAEJ,iBAAiB,IACrD,KAAKH,EACH,OAAO/B,OAAO0C,OAAO,GAAIJ,EAAO,CAAEF,MAAOG,EAAOE,QAAQL,QAC1D,QACE,OAAOE,IClEEc,EAFDC,YAAYhB,GC4BnB,SAASiB,EAAab,GAC3B,MAAO,CAAED,KAAMX,EAAcY,WChChB,UAA0B,qDCA1B,MAA0B,8C,gBCuFzC,IAEec,EAFCC,aApFQ,SAAClB,EAAOmB,GAC9B,MAAO,CACLvC,WAAYoB,EAAMpB,eAItB,SAA4BwC,GAC1B,MAAO,KA6EOF,EA1EhB,YAA4C,IAAftC,EAAc,EAAdA,WAC3B,OACE,cAACyC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,sBAAKC,MAAO,CAAEC,MAAO,KAAMC,OAAQ,IAAKC,WAAY,QAApD,UACE,mBAAGC,UAAU,kBAAb,SAEIlE,OAAOC,OAAOiB,EAAWR,SAASW,KAAI,SAAC9B,EAAQ4E,GAC7C,OACE,oBAAGD,UAAS,sBAA2B,GAAVC,EAAjB,KAAZ,UACE,uBAAMC,EAAE,MAAMC,EAAE,IAAIC,GAAG,SACrBC,SAAS,KAAKC,WAAW,MAAMC,cAAc,OAC7CC,KAAK,OACLC,WAAW,MAHb,oBAG2BR,EAAU,KACrC,sBAAMS,GAAG,MAAMC,GAAG,IAAIC,GAA4B,GAAvBvF,EAAOqB,SAAShD,OAAW,GAAImH,GAAG,IAC3DC,OAAO,OAAOC,YAAY,MAC5B,mBAAGf,UAAU,mBAAb,SAEE3E,EAAOqB,SAASS,KAAI,SAAC7B,EAAS0F,GAC5B,OACE,oBAAG,2BAAmBf,EAAnB,YAAgCe,GACjChB,UAAS,oBAA6B,GAAbgB,EAAmB,GAAnC,OACTpB,MAAO,CACLqB,OAAQ3F,EAAU,EAAI,UAAY,MAEpC4F,QAAS,WACP,GAAI5F,EAAU,EAAG,CACf,IAAM6F,EAAYC,SAASC,eAAT,gBAAiCpB,EAAU,EAA3C,YAAgDe,EAAW,IAC7E,GAAiB,OAAdG,EACD,OAEFG,OAAOC,SAAS,CACdC,IAAKL,EAAUM,UACfC,SAAU,aAblB,UAkBE,wBACEC,GAAG,IAAIC,GAAG,IAAIC,EAAE,KAChBrB,KAAmB,IAAZlF,EAAgB,QAAU,UACjCwF,OAAqB,IAAZxF,EAAgB,OAAS,SACpC,sBAAM4E,EAAE,IAAIC,EAAE,IACZK,KAAmB,IAAZlF,EAAgB,QAAU,OACjCgF,WAAW,MAAMD,SAAS,KAC1BI,WAAW,SAASL,GAAG,SAHzB,SAGmC9E,MAzBrC,wBAC6E2E,EAD7E,oBACkGe,WAZ1G,wBAAoEf,SA+C5E,oBAAGD,UAAU,mBAAb,UACE,sBAAME,EAAE,MAAMM,KAAK,OAAOL,EAAE,IAAIC,GAAG,SAASC,SAAS,KAAKE,cAAc,MAAMD,WAAW,MAAOG,WAAW,MAA3G,qBACA,sBAAMC,GAAG,MAAMC,GAAG,IAAIC,GAAK,IAAWC,GAAG,IAAIC,OAAO,OAAOC,YAAY,MAErE,IAAIe,MAAM,IAAItB,KAAK,GAAGrD,KAAI,SAAC0B,EAAEzE,GAC3B,OACE,oBAAG4F,UAAS,oBAAe,IAAS,GAAJ5F,EAApB,OAAZ,UACE,wBAAQuH,GAAG,IAAIC,GAAG,IAAIC,EAAE,KAAKrB,KAAK,QAAQM,OAAO,SACjD,sBAAMN,KAAK,OAAOJ,GAAG,QAAQC,SAAS,KAAKI,WAAW,SAAtD,SAAgErG,EAAI,MAFtE,iCAA6EA,kBCxE9E,SAAS2H,EAAcC,GACpC,OACE,eAACvC,EAAA,EAAD,CAAMwC,WAAS,EAACvC,MAAI,EAACE,MAAO,CAACjE,QAAS,YAAauG,UAAW,OAAQC,WAAY,UAAlF,UACE,eAAC1C,EAAA,EAAD,CAAMC,MAAI,EAAV,sFAC2E,mBAAGE,MAAO,CAACwC,MAAO,aAAcC,KAAK,gEAArC,wBAD3E,6MAGA,cAAC5C,EAAA,EAAD,CAAMC,MAAI,EAACE,MAAO,CAACC,MAAO,KAAMF,GAAI,GAApC,SACE,+BACE,uFAAyD,sCAAzD,qBACA,8HACA,qBAAIC,MAAO,CAAC0C,WAAY,GAAxB,UAA4B,sCAA5B,gEACA,4KACA,qBAAI1C,MAAO,CAAC0C,WAAY,GAAxB,UAA4B,sCAA5B,uEACA,iGACA,qBAAI1C,MAAO,CAAC0C,WAAY,GAAxB,UAA4B,sCAA5B,oGCKV,IAEeC,EAFWjD,aAlBF,SAAClB,EAAOmB,GAC9B,MAAO,CACLiD,aAA0C,OAA5BpE,EAAMnB,kBAA6BmB,EAAM3D,QAAQnB,QAAO,SAAAC,GAAK,OAAOA,EAAEyB,UAAYoD,EAAMnB,qBAAqBvD,OAAS0E,EAAM3D,QAAQf,WAItJ,SAA4B8F,GAC1B,MAAO,KAWiBF,EAR1B,SAAqC0C,GACnC,OACE,eAACvC,EAAA,EAAD,CAAMC,MAAI,EAACuC,WAAS,EAACtC,GAAI,GAAI8C,eAAe,WAA5C,UACE,sBAAM7C,MAAO,CAACU,WAAY,IAAKoC,YAAa,GAA5C,SAAkDV,EAAMQ,eAD1D,UAC+G,IAAvBR,EAAMQ,aAAqB,GAAK,IADxH,eCuFJ,IAEeG,EAFCrD,aAjGQ,SAAClB,EAAOmB,GAC9B,MAAO,CACLpG,MAAOiF,EAAMjF,MACbsB,QAAS2D,EAAM3D,QACfsD,gBAAiBK,EAAML,gBACvBd,kBAAmBmB,EAAMnB,kBACzBV,OAAQ6B,EAAM7B,WAIlB,SAA4BiD,GAC1B,MAAO,CACLoD,eAAgB,SAAArE,GAAO,OAAIiB,ENUxB,SAAyBjB,GAC9B,MAAO,CAAED,KAAMb,EAAkBc,WMXKqE,CAAerE,KACnDsE,WAAY,SAAAtE,GAAO,OAAIiB,ENKpB,SAAqBjB,GAC1B,MAAO,CAAED,KAAMZ,EAAaa,WMNMsE,CAAWtE,QAoF/Be,EAhFhB,SAA2B0C,GACzB,OACE,eAACvC,EAAA,EAAD,CAAMC,MAAI,EAACuC,WAAS,EAACrC,MAAO,CAACC,MAAO,KAAMiD,OAAQ,OAAQvC,cAAe,IAAzE,UACE,cAAC,EAAD,IACA,eAACd,EAAA,EAAD,CAAMC,MAAI,EAACuC,WAAS,EAAC,cAAY,UAAUtC,GAAI,GAA/C,UACE,eAACF,EAAA,EAAD,CAAMC,MAAI,EAACuC,WAAS,EAACtC,GAAI,GAAIoD,WAAW,SAASnD,MAAO,CAAEjE,QAAS,GAAIuG,UAAW,SAAUc,aAAc,EAAG1C,WAAY,IAAKC,cAAe,GAA7I,UACE,cAACd,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,MAAO,CAACqD,eAAgB,aAA1C,oBACA,cAACxD,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,MAAO,CAACqD,eAAgB,aAA1C,qBACA,cAACxD,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,MAAO,CAACqD,eAAgB,aAA1C,qBACA,cAACxD,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,MAAO,CAAEsC,UAAW,OAAQe,eAAgB,aAA9D,kBACA,cAACxD,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,MAAO,CAAEqB,OAAQ,UAAWmB,MAAO,YAAa/B,SAAU,GAAIC,WAAY,IAAK4B,UAAW,QAASe,eAAgB,mBACjI/B,QAAS,WAAMc,EAAMjE,gBAAgBrE,SAAWsI,EAAMvH,QAAQf,OAASsI,EAAMY,gBAAe,GAASZ,EAAMY,gBAAe,IAD9H,SAEOZ,EAAMjE,gBAAgBrE,SAAWsI,EAAMvH,QAAQf,OAAS,eAAiB,kBAIlFsI,EAAMvH,QAAQnB,QAAO,SAAA8D,GACnB,OAA+B,OAA5B4E,EAAM/E,mBAA8B+E,EAAM/E,oBAAsBG,EAAMpC,WAKxEmC,KAAI,SAACC,EAAM8F,GACZ,IAAMC,GAA+D,IAA/CnB,EAAMjE,gBAAgBe,QAAQoE,GACpD,OACE,eAACzD,EAAA,EAAD,CAAM,gCAAwBrC,EAAMzD,IAClCA,GAAE,gBAAWyD,EAAM/B,OAAjB,YAA2B+B,EAAM9B,SACToE,MAAI,EAACuC,WAAS,EAACtC,GAAI,GAE7CoD,WAAW,aACXnD,MAAO,CACLwD,aAAc,EACdC,gBAAiBH,EAAa,IAAM,EAAI,UAAY,UACpDvH,QAAS,GACTuG,UAAW,SACXc,aAAc,GAVlB,UAYE,cAACvD,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SAAmBvC,EAAM/B,SACzB,cAACoE,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SAAmBqC,EAAMzF,OAAOjD,QAAO,SAAAC,GAAK,OAAO8D,OAAO9D,EAAEkD,UAAYY,OAAOD,EAAM/B,WAAWgC,OAAOD,EAAM9B,SAAS,GAAGgI,eACzH,cAAC7D,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SAAmBvC,EAAMpC,UACzB,eAACyE,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,MAAO,CAAEsC,UAAW,QAAtC,UACI,WACA,IAAsB,IAAlBiB,EAAwB,CAC1B,IAAMI,EAAevB,EAAM7I,MAAMG,QAAO,SAAAC,GAAK,OAAO8D,OAAO9D,EAAEI,MAAQ0D,OAAOD,EAAMzD,IAAI,KAAK,GAC3F,YAAoBoB,IAAjBwI,EAEC,6BAIF,sBAAK3D,MAAO,CAACjE,QAAS,oBAAtB,UAA2C,4BAAI4H,EAAavI,UAA5D,IAA0EuI,EAAavJ,cAT3F,GAaF,6BAAsB,IAAlBmJ,EAAyB/F,EAAMpC,QAAU,IAAM,KAAQoC,EAAMpD,UAC/D,WACA,IAAsB,IAAlBmJ,EAAwB,CAC1B,IAAMK,EAAWxB,EAAM7I,MAAMG,QAAO,SAAAC,GAAK,OAAO8D,OAAO9D,EAAEI,MAAQ0D,OAAOD,EAAMzD,IAAI,KAAK,GACvF,YAAgBoB,IAAbyI,EAEC,6BAIF,sBAAK5D,MAAO,CAACjE,QAAS,oBAAtB,UAA2C,4BAAI6H,EAASxI,UAAxD,IAAsEwI,EAASxJ,cATnF,MAcJ,cAACyF,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,MAAO,CAAEqB,OAAQ,UAAWmB,MAAO,YAAa/B,SAAU,GAAI6B,UAAW,SACzFhB,QAAS,WAAMc,EAAMa,WAAWK,IADlC,UACqE,IAAlBC,EAAyB,OAAS,WA7CvF,gBAEgB/F,EAAMzD,iBCjDnB,MAA0B,uC,SCmCzC,IAEe8J,EAFInE,aA/BK,SAAClB,EAAOmB,GAC9B,MAAO,CACLrB,MAAOE,EAAMF,UAIjB,SAA4BsB,GAC1B,MAAO,CACLJ,YAAa,SAAAb,GAAO,OAAIiB,EAASJ,EAAYb,KAC7CmF,SAAU,SAAAnF,GAAO,OAAIiB,ER0BlB,SAAmBjB,GACxB,MAAO,CAAED,KAAMT,EAAWU,WQ3BMmF,CAASnF,QAsBxBe,EAlBnB,SAA8B0C,GAC5B,OACE,cAACvC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,cAACgE,EAAA,EAAD,CAAWC,MAAM,QAAQC,QAAQ,WAC/BC,aAAc9B,EAAM9D,MACpB0B,MAAO,CAACC,MAAO,IAAKmD,aAAc,IAClCe,SAAU,SAACC,GACThC,EAAM0B,SAAS,CAAExF,MAAO8F,EAAMC,YAAYC,OAAOhJ,SAEnDiJ,QAAS,SAACH,GACsB,UAA3BA,EAAMC,YAAYG,MAA+C,gBAA3BJ,EAAMC,YAAYG,MACzDpC,EAAM5C,YAAY,YCuC9B,IAEeiF,EAFC/E,aA/DQ,SAAClB,GACvB,MAAO,CACLH,cAAeG,EAAMH,cACrBhB,kBAAmBmB,EAAMnB,sBAI7B,SAA4BuC,GAC1B,MAAO,CACL8E,qBAAsB,SAAA/F,GAAaiB,ETMhC,SAA0BjB,GAC/B,MAAO,CAAED,KAAMd,EAAkBe,WSPagG,CAAgBhG,QAsDhDe,EAlDhB,YAAwF,IAA3DrB,EAA0D,EAA1DA,cAAehB,EAA2C,EAA3CA,kBAAmBqH,EAAwB,EAAxBA,qBAC7D,OACE,cAAC7E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,MAAO,CAAEoD,aAAc,GAA1C,SACE,qBAAKpD,MAAO,CAAE4E,SAAU,WAAY1E,OAAQ,IAAKD,MAAO,KAAMiD,OAAQ,QAAtE,SAEI7E,EAAcd,KAAI,SAACsH,EAAKC,GACtB,OACE,qBAEE9E,MAAO,CACL4E,SAAU,WACVhD,IAAKiD,EAAKE,GAAIC,KAAMH,EAAKI,GACzBhF,MAAO4E,EAAK/D,GAAG+D,EAAKI,GAAI/E,OAAQ2E,EAAK9D,GAAG8D,EAAKE,GAC7CzC,UAAW,OACX4C,UAAW,aACXzB,gBAAiB,UACjB0B,SAAU,SACV3C,MAAO,OACPgB,aAAc,MACdrD,WAAY,OACZkB,OAAQ,UACR+D,OAAQ/H,IAAsBwH,EAAKQ,KAAKhK,KAAO,iBAAmB,yBAEpEiG,QAAS,WACkB,OAAtBjE,GAA8BA,IAAsBwH,EAAKQ,KAAKhK,KAC/DqJ,EAAqBG,EAAKQ,KAAKhK,MAE/BqJ,EAAqB,OApB3B,SAwBE,sBAAK1E,MAAO,CACVsF,QAAS,eACTV,SAAU,WACVhD,IAAK,MACLoD,KAAM,MACNvE,SAAU,GACVC,WAAY,KANd,UAQGmE,EAAKQ,KAAKhK,KARb,IAQmB,uBAAM2E,MAAO,CAACU,WAAY,IAAKD,SAAU,IAAzC,cAAgDoE,EAAKQ,KAAK/J,MAA1D,WAhCrB,uBACuBwJ,cCzBtB,MAA0B,iD,gCCGpBS,E,kDAEjB,WAAanD,GAAQ,IAAD,8BAClB,cAAMA,IACD5D,MAAQ,GACb,EAAKgH,OAASC,IAAMC,YACpB,EAAKC,0BAA2B,EAJd,E,qDAOpB,WACE,IAAMC,EAAI,IACJC,EAAI,IACJC,EAAW,GAIXC,EAASpK,IAETqK,EAAMrK,IAAUsK,KAAKT,OAAOU,SAC/BC,KAAK,UAAW,CAAC,EAAE,EAAEP,EAAEC,GAAGlL,KAAK,MAC/BwL,KAAK,QAAS,QAAQA,KAAK,SAAU,QACrCnG,MAAM,mBAAoB,QAEvBoG,EAAOJ,EAAIK,OAAO,QAElBC,EAAKF,EAAKC,OAAO,kBAAkBF,KAAK,KAAM,uBACtCG,EAAGD,OAAO,QACrBF,KAAK,aAAc,QACnBA,KAAK,SAAU,MACfA,KAAK,eAAgB,MACVG,EAAGD,OAAO,QACrBF,KAAK,aAAc,QACnBA,KAAK,SAAU,OACfA,KAAK,eAAgB,QACVG,EAAGD,OAAO,QACrBF,KAAK,aAAc,QACnBA,KAAK,SAAU,QACfA,KAAK,eAAgB,MAEHC,EAAKC,OAAO,UAAUF,KAAK,KAAK,2BAErBE,OAAO,gBACpCF,KAAK,KAAK,GAAGA,KAAK,KAAK,GAAGA,KAAK,eAAgB,IAC/CA,KAAK,cAAc,QAEtBC,EAAKC,OAAO,YAAYF,KAAK,KAAK,uBAC/BE,OAAO,UACLF,KAAK,KAAQ,GAAFP,GAAOO,KAAK,KAAQ,GAAFN,GAAOM,KAAK,IAAO,IAAFP,GAC9CO,KAAK,OAAO,QAEjB,IAAMI,EAAY5K,MAAiB6K,OAAO,CAAC,EAAEV,IAAWW,MAAM,CAAC,EAAEb,IAC3Dc,EAAgBH,EAAU,IAE1BI,EAAUX,EAAIK,OAAO,KAAKF,KAAK,YAArB,oBAA+CO,EAA/C,YAAgEA,EAAhE,MAGVE,EAAQZ,EAAIK,OAAO,KAAKF,KAAK,YAArB,oBAAiD,GAAFP,EAA/C,YAA0D,KAAFC,EAAxD,MACXM,KAAK,SAAU,iCAEZ1F,EAAa,GAAFmF,EACjBgB,EAAMP,OAAO,QAAQQ,KAAK,WACvBV,KAAK,IAAK,GAAGA,KAAK,IAAK,GAAGA,KAAK,KAAM,SACrCA,KAAK,YAAa1F,GAClB0F,KAAK,OAAQ,QACbA,KAAK,cAAe,KACpBA,KAAK,cAAe,UACvBS,EAAMP,OAAO,QAAQQ,KAAK,QACvBV,KAAK,IAAK,GAAGA,KAAK,IAAK,GAAGA,KAAK,KAAM,SACrCA,KAAK,YAAsB,KAAT1F,GAClB0F,KAAK,OAAQ,QACbA,KAAK,cAAe,KACpBA,KAAK,kBAAkB,IACvBA,KAAK,cAAe,UAEvB,IAEM5M,EAAQ,GACRuN,EAAc,GAEpBnL,IAASmK,GAAU7L,SAAQ,SAAAqG,GACzB3E,IAASmK,GAAU7L,SAAQ,SAAAsG,GACzB,IAAMwG,EAAM,CAAEzG,EAAGiG,EAAUjG,GAAIC,EAAGgG,EAAUhG,IAGtCrG,EAFSyM,EAAQN,OAAO,KAAKF,KAAK,YAAzB,oBAAmDY,EAAIzG,EAAvD,YAA4DyG,EAAIxG,EAAhE,MAEK8F,OAAO,QACxBW,MAAM,CAAC1G,IAAEC,MACT4F,KAAK,YAAac,KAAKC,SAAW,GAAM,aAAe,eACvDf,KAAK,KAAM,GAAGA,KAAK,KAbZ,KAamBO,GAAuBP,KAAK,KAAM,GAAGA,KAAK,KAb7D,IAamEO,GAC1EP,KAAK,SAAU,QAAQA,KAAK,eAAkCP,EAAEE,EA3E9C,IA2EyDK,KAAK,iBAAkB,cAElEhL,IAAhC2L,EAAYxG,EAAGwF,MAChBgB,EAAYxG,EAAGwF,IAAe,IAEhCgB,EAAYxG,EAAGwF,IAAavF,EAAGuF,IAAe5L,EAE9CX,EAAMiC,KAAKtB,SAGf,IAAMiN,EAAOlB,MACb,SAASmB,IACJD,EAAKxB,0BAGRpM,EAAMU,SAAQ,SAAAC,GACZ,IAAMmN,EAAInN,EAAK8M,QACTM,EAAQL,KAAKM,KAAMN,KAAKO,IAAK1B,GAAYuB,EAAE/G,EAAE,GAAK2G,KAAKO,IAAK1B,GAAYuB,EAAE9G,EAAE,IAClFrG,EAAKuN,aAAaH,OAAM,SAAAjL,GAAC,OA3FXqL,MA2FaJ,KAAiBK,SAAS,GAClDxB,KAAK,SAAU,QACfA,KAAK,eAAkCP,EAAEE,EA/FvB,GA+FmC,KACrD2B,aAAaH,MAAM,GAAGK,SAAS,MAAMC,KAAK7B,GAC1CI,KAAK,YAAac,KAAKC,SAAW,GAAM,aAAe,eACvDf,KAAK,SAAU,WACfA,KAAK,eAAkCP,EAAEE,EAnGvB,IAoGlB+B,GAAG,OAAO,SAACxL,GACEyJ,KAATzJ,EAAEiE,GAA+BwF,KAATzJ,EAAEkE,GAC3B6G,UAKVA,K,kCAGF,WACEnB,KAAKN,0BAA2B,I,oBAGlC,WACE,OACE,qBAAK3F,MAAO,CAAEsC,UAAU,UAAxB,SACE,qBAAKwF,IAAK7B,KAAKT,e,GAlIiBC,IAAMsC,WCgChD,IAyCeC,EAFItI,aA9DK,SAAClB,EAAOmB,GAC9B,MAAO,CACLvB,gBAAiBI,EAAMJ,gBACvB7E,MAAOiF,EAAMjF,MACbsB,QAAS2D,EAAM3D,QACf8B,OAAQ6B,EAAM7B,WAIlB,SAA4BiD,GAC1B,MAAO,KAoDUF,EAvCS,SAAU0C,GACpC,OACE,eAACvC,EAAA,EAAD,CAAMwC,WAAS,EAACrC,MAAO,CAAEsC,UAAW,SAAUc,aAAc,KAAM6E,UAAW,IAA7E,UACE,cAACpI,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,qBAAKmI,IAAKC,EAAYnI,MAAO,CAAEC,MAAO,IAAKiD,OAAQ,QAASkF,IAAI,kDAIjC,IAA1BhG,EAAMhE,gBAEL,cAACyB,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,MAAO,CAAEkD,OAAQ,OAAQ+E,UAAW,IAAtD,SACE,cAAC,EAAD,MAKF,eAACpI,EAAA,EAAD,CAAMwC,WAAS,EAACvC,MAAI,EAACC,GAAI,GAAzB,UACE,eAACF,EAAA,EAAD,CAAMwC,WAAS,EAACvC,MAAI,EAAC+C,eAAe,SAAS7C,MAAO,CAACkD,OAAQ,OAAQjD,MAAO,KAA5E,UACE,cAACkC,EAAD,IACA,cAAC,EAAD,OAEF,eAACtC,EAAA,EAAD,CAAMwC,WAAS,EAACvC,MAAI,EAACC,GAAI,GAAIC,MAAO,CAAEsF,QAAkC,IAAzBlD,EAAMvH,QAAQf,OAAe,KAAO,QAAnF,UACE,cAAC+F,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,MAAO,CAAEoD,aAAc,IAA1C,yDACA,cAACvD,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SAAmB,qBAAKmI,IAAKG,EAAmBD,IAAI,8DAEtD,eAACvI,EAAA,EAAD,CAAMwC,WAAS,EAACvC,MAAI,EAACC,GAAI,GAAIC,MAAO,CAAEsF,QAAkC,IAAzBlD,EAAMvH,QAAQf,OAAe,OAAS,MAArF,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,gBC3ClB,IAkBewO,EAFH5I,aA7BY,SAAClB,EAAOmB,GAC9B,MAAO,MAGT,SAA4BC,GAC1B,MAAO,CACL2I,SAAU,SAAA5J,GAAO,OAAIiB,EbFlB,SAAmBjB,GACxB,MAAO,CAAED,KAAMhB,EAAWiB,WaCM4J,CAAS5J,KACvC6J,UAAW,SAAA7J,GAAO,OAAIiB,EbCnB,SAAoBjB,GACzB,MAAO,CAAED,KAAMf,EAAYgB,WaFM6J,CAAU7J,KACzC8J,cAAe,SAAA9J,GAAO,OAAIiB,EboBvB,SAAwBjB,GAC7B,MAAO,CAAED,KAAMV,EAAgBW,WarBM8J,CAAc9J,KACjDa,YAAa,SAAAb,GAAO,OAAIiB,EAASJ,EAAYb,QAoBrCe,EAhBS,YAAgE,IAApD6I,EAAmD,EAAnDA,SAAUC,EAAyC,EAAzCA,UAAWhJ,EAA8B,EAA9BA,YAAaiJ,EAAiB,EAAjBA,cAWjE,OATAC,YAAIC,GAAiBC,MAAK,SAAAvM,GACxBkM,EAASlM,GACTqM,YAAIG,GAAkBD,MAAK,SAAAvM,GACzBmM,EAAUnM,GACVmD,IACAiJ,UAKF,cAAC,EAAD,OCpBWH,MARf,WACE,OACE,cAAC,IAAD,CAAUhJ,MAAOA,EAAjB,SACE,cAAC,EAAD,OCKSwJ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBJ,MAAK,YAAkD,IAA/CK,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OAEP,cAAC,EAAD,IAEA/H,SAASC,eAAe,SAM1BqH,M","file":"static/js/main.08c2683e.chunk.js","sourcesContent":["export default function cleanUpLines (lines) {\n  const charactersToRemove = ['?','.',',','!','-']\n  const filteredLines = lines.filter(o=>{return o.deleted !== 'TRUE'})\n  // reset the id's of the lines after deleting all the deleted lines\n  for(let i = 0; i < filteredLines.length ; i++) {\n    filteredLines[i].id = String(i)\n  }\n  // clean up the lines\n  filteredLines.forEach(line=>{\n    line.search_text = line.line_text.replace(RegExp('\\\\[.*?\\\\]'),'');          \n    charactersToRemove.forEach((c,idx)=>{\n      line.search_text = line.search_text.replaceAll(c,' ')\n    })          \n    line.search_text = line.search_text.split(' ').filter(o=>o.length>0).join(' ')\n  })\n  return filteredLines\n}","import * as d3 from 'd3'\n\nexport default function generateTreemap (matches) {\n  const treeMapDimensions = { width: 1024, height: 172 }\n  // characters in the matches\n  const characters = matches.reduce((accumulator, object)=>{\n    // console.log(object)\n    if(accumulator[object.speaker] === undefined) {\n      accumulator[object.speaker] = { name: object.speaker, value: 0, seasonEpisodes: [] }\n    }\n    accumulator[object.speaker].value += 1\n    accumulator[object.speaker].seasonEpisodes.push( {season: object.season, episode: object.episode })\n    return accumulator\n  },{})\n\n  const treemap = d3.treemap()\n    .tile(d3.treemapSquarify.ratio(2))\n    .size([treeMapDimensions.width, treeMapDimensions.height])\n    .padding(1)\n    .round(true)(d3.hierarchy({name: '', children: Object.values(characters)}).sum(d => d.value).sort((a, b) => b.value - a.value))\n\n  return treemap.leaves()\n}\n","export default function buildEmptyBubbleData (series) {\n  const seasons = {}\n  series.forEach(episode => {\n    if(seasons[episode.Season] === undefined) {\n      seasons[episode.Season] = {\n        episodes: []\n      }\n    }\n    if(seasons[episode.Season].episodeCount === undefined) {\n      seasons[episode.Season].episodeCount = 0\n    }\n    seasons[episode.Season].episodeCount += 1    \n  })\n  \n  Object.values(seasons).forEach(season => {\n    for (let i = 0; i < season.episodeCount; i++) {\n      season.episodes.push(0)\n    }\n  })\n\n  return {\n    seasons: toArray(seasons)\n  }\n}\n\nfunction toArray (object) {\n  const o = []\n  Object.values(object).forEach((obj, objIndex)=>{\n    o.push(obj)\n  })\n  return o\n}","export default function updateBubbleData (bubbleData, matches, filteredCharacter) {\n  const newBubbleData = { seasons: [] }\n  newBubbleData.seasons = bubbleData.seasons.map(season => {\n    const o = { episodes: [] }\n    o.episodeCount = season.episodeCount\n    season.episodes.forEach(episode=>{\n      o.episodes.push(0)\n    })\n    return o\n  }) \n\n  matches.forEach(match => {\n    if(filteredCharacter === null || filteredCharacter === match.speaker) {\n      newBubbleData.seasons[Number(match.season)-1].episodes[Number(match.episode)-1] += 1\n    }    \n  })\n\n  return newBubbleData\n}","export const ADD_LINES = 'ADD_LINES'\nexport const ADD_SERIES = 'ADD_SERIES'\nexport const CHARACTER_FILTER = 'CHARACTER_FILTER'\nexport const EXPAND_ALL_LINES = 'EXPAND_ALL_LINES'\nexport const EXPAND_LINE = 'EXPAND_LINE'\nexport const FIND_MATCHES = 'FIND_MATCHES'\nexport const FINISH_LOADING = 'FINISH_LOADING'\nexport const SET_QUOTE = 'SET_QUOTE'","import cleanUpLines from '../../lib/cleanUpLines'\nimport generateTreemap from '../../lib/generateTreemap'\nimport initializeBubbleData from '../../lib/initializeBubbleData'\nimport updateBubbleData from '../../lib/updateBubbleData'\n\nimport {\n  ADD_LINES,\n  ADD_SERIES,\n  CHARACTER_FILTER,\n  EXPAND_LINE,\n  EXPAND_ALL_LINES,\n  FIND_MATCHES,\n  FINISH_LOADING,\n  SET_QUOTE\n} from '../../constants/action-types'\n\nconst initialState = {  \n  bubbleData: { seasons: [] },\n  expandedMatches: [],\n  filteredCharacter: null,\n  finishedLoading: false,\n  lines: [],\n  matches: [],\n  series: [],\n  treemapLeaves: [],  \n  quote: 'that\\'s what she said',\n}\n\nfunction rootReducer(state = initialState, action) {\n  switch(action.type) {\n    case ADD_LINES:\n      const lines = cleanUpLines(action.payload)\n      return Object.assign({}, state, { lines })\n    case ADD_SERIES: \n      const bubbleData = initializeBubbleData(action.payload)\n      return Object.assign({}, state, { series: action.payload, bubbleData })    \n    case CHARACTER_FILTER:\n      const updatedBubbleDataFilteredCharacter = updateBubbleData(state.bubbleData, state.matches, action.payload)\n      return Object.assign({}, state, { filteredCharacter: action.payload, bubbleData: updatedBubbleDataFilteredCharacter }) \n    case EXPAND_ALL_LINES:\n      let allExpandedMatches\n      if (action.payload === true) {\n        allExpandedMatches = state.matches.map((match,matchIdx)=>{ return matchIdx})\n      } else {\n        allExpandedMatches = []\n      }\n      return Object.assign({}, state, { expandedMatches: allExpandedMatches })          \n    case EXPAND_LINE:\n      let expandedMatches = state.expandedMatches.filter(n=>{return true})\n      if(expandedMatches.indexOf(action.payload) !== -1) {\n        expandedMatches = expandedMatches.filter(n=>{ return n !== action.payload })\n      } else {\n        expandedMatches.push(action.payload) \n      }      \n      return Object.assign({}, state, { expandedMatches })     \n    case FIND_MATCHES: \n      const matches = state.lines.filter(o=>{ \n        if(state.quote.toLowerCase().trim().split(' ').length === 1) {\n          return o.search_text.toLowerCase().split(' ').indexOf(state.quote.toLowerCase().trim()) !== -1\n        } else {\n          return o.search_text.toLowerCase().indexOf(state.quote.toLowerCase().trim()) !== -1 \n        }            \n      })\n      const updatedBubbleData = updateBubbleData(state.bubbleData, matches, null)\n      const treemapLeaves = generateTreemap(matches)\n      return Object.assign({}, state, { matches, bubbleData: updatedBubbleData, expandedMatches: [], treemapLeaves, filteredCharacter: null })\n    case FINISH_LOADING:\n      return Object.assign({}, state, { finishedLoading: true })      \n    case SET_QUOTE: \n      return Object.assign({}, state, { quote: action.payload.quote })\n    default:\n      return state\n  }\n}\n\nexport default rootReducer","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers/index\";\n\nconst store = createStore(rootReducer);\n\nexport default store;","import {\n  ADD_LINES,\n  ADD_SERIES,\n  CHARACTER_FILTER,\n  EXPAND_ALL_LINES,\n  EXPAND_LINE,  \n  FIND_MATCHES,\n  FINISH_LOADING,\n  SET_QUOTE,\n} from '../constants/action-types'\n\nexport function addLines (payload) {\n  return { type: ADD_LINES, payload }\n}\n\nexport function addSeries (payload) {\n  return { type: ADD_SERIES, payload }\n}\n\nexport function characterFilter (payload) {\n  return { type: CHARACTER_FILTER, payload }\n}\n\nexport function expandLine (payload) {\n  return { type: EXPAND_LINE, payload }  \n}\n\nexport function expandAllLines (payload) {\n  return { type: EXPAND_ALL_LINES, payload }  \n}\n\nexport function findMatches (payload) {\n  return { type: FIND_MATCHES, payload }\n}\n\nexport function finishLoading (payload) {\n  return { type: FINISH_LOADING, payload }\n}\n\nexport function setQuote (payload) {\n  return { type: SET_QUOTE, payload }\n}","export default __webpack_public_path__ + \"static/media/the-office-lines-scripts.ec62a81b.csv\";","export default __webpack_public_path__ + \"static/media/the-office-series.4be06bee.csv\";","import { connect } from 'react-redux'\nimport { Grid } from '@material-ui/core'\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    bubbleData: state.bubbleData\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {}\n}\n\nfunction ConnectedBubbles ({ bubbleData }) {\n  return (\n    <Grid item xs={12}>\n      <svg style={{ width: 1024, height: 410, userSelect: 'none' }}>\n        <g transform='translate(0 30)'>\n          {\n            Object.values(bubbleData.seasons).map((season, seasonIdx) => {\n              return (\n                <g transform={`translate(0 ${seasonIdx*40})`} key={`bubble_season_${seasonIdx}`}>\n                  <text x='100' y='0' dy='0.33em' \n                    fontSize='14' fontWeight='700' letterSpacing='.5px'\n                    fill='#777'\n                    textAnchor='end'>Season {seasonIdx+1}</text>\n                  <line x1='125' y1='0' x2={(season.episodes.length*35)+90} y2='0' \n                    stroke='#AAA' strokeWidth='1'/>\n                  <g transform='translate(100 0)'>\n                  {\n                    season.episodes.map((episode, episodeIdx) => {\n                      return (\n                        <g data-testid={`bc-${seasonIdx}-${episodeIdx}`}\n                          transform={`translate(${(episodeIdx * 35) + 25} 0)`} key={`bubble_season_${seasonIdx}_episode_${episodeIdx}`}\n                          style={{\n                            cursor: episode > 0 ? 'pointer' : null\n                          }}\n                          onClick={()=>{\n                            if (episode > 0) {\n                              const reference = document.getElementById(`quote_${seasonIdx+1}_${episodeIdx+1}`)\n                              if(reference === null) {\n                                return\n                              }\n                              window.scrollTo({\n                                top: reference.offsetTop,\n                                behavior: 'smooth'\n                              })\n                            }\n                          }}                          \n                        >\n                          <circle \n                            cx='0' cy='0' r='15' \n                            fill={ episode === 0 ? 'white' : '#a6cee3' }\n                            stroke={ episode === 0 ? '#AAA' : 'none' }/>\n                          <text x='0' y='0' \n                            fill={ episode === 0 ? 'white' : '#333' }\n                            fontWeight='700' fontSize='12' \n                            textAnchor='middle' dy='0.33em'>{episode}</text>\n                        </g>\n                      )\n                    })\n                  }\n                  </g>\n                </g>\n              )\n            })\n          }\n        </g>\n        <g transform='translate(0 385)'>\n          <text x='100' fill='#AAA' y='0' dy='0.33em' fontSize='10' letterSpacing='1px' fontWeight='600'  textAnchor='end'>EPISODE</text>\n          <line x1='125' y1='0' x2={(26*35)+90} y2='0' stroke='#CCC' strokeWidth='1'/>\n          {\n            new Array(26).fill(0).map((n,idx)=>{\n              return (\n                <g transform={`translate(${125+(idx*35)} 0)`} key={`bubbles_legend_episode_${idx}`}>\n                  <circle cx='0' cy='0' r='10' fill='white' stroke='#CCC'/>\n                  <text fill='#AAA' dy='.33em' fontSize='10' textAnchor='middle'>{idx+1}</text>\n                </g>\n              )\n            })\n          }\n        </g>\n      </svg>\n    </Grid>\n  )\n}\n\nconst Bubbles = connect(mapStateToProps, mapDispatchToProps)(ConnectedBubbles)\n\nexport default Bubbles","import Grid from '@material-ui/core/Grid'\n\nexport default function Instructions (props) {\n  return (\n    <Grid container item style={{padding: '12px 32px', textAlign: 'left', lineHeight: '1.33em'}}>\n      <Grid item>\n        This application lets you search every line from the NBC television show <a style={{color: 'steelblue'}} href=\"https://en.wikipedia.org/wiki/The_Office_(American_TV_series)\">The Office</a>, and visualizes the results to give you insight as to which episode the quote appears, who said the quote, when they said the quote, how many times they said the quote, and the context of the quote.\n      </Grid>\n      <Grid item style={{width: 640}} xs={12}>\n        <ul>\n          <li>Type word or phrase in the search box, and press the <b>Enter</b> key to search.</li>\n          <li>There is a graph of the character who said the quote, and how many times they say the quote.</li>\n          <li style={{marginLeft: 0}}><b>Click</b> the box for the character to filter for only their lines.</li>\n          <li>The seasons and episodes are plotted beneath the character chart, and the episode contains the number of lines the word or phrase appears.</li>\n          <li style={{marginLeft: 0}}><b>Click</b> the episode bubble to view the matching lines from that episode.</li>                 \n          <li>Beneath the graphs is the list of lines that contain the quote.</li>\n          <li style={{marginLeft: 0}}><b>Click</b> \"more\" to see the lines immediately before and after the line with your search terms.</li>\n        </ul>\n      </Grid>\n    </Grid>    \n  )\n}","import { connect } from 'react-redux'\nimport Grid from '@material-ui/core/Grid'\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    resultsFound: state.filteredCharacter !== null ? state.matches.filter(o=>{ return o.speaker === state.filteredCharacter }).length : state.matches.length\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {}\n}\n\nfunction ConnectedResultsFoundCount (props) {\n  return (\n    <Grid item container xs={12} justifyContent='flex-end'>\n      <span style={{fontWeight: 700, marginRight: 4}}>{ props.resultsFound }</span> result{ props.resultsFound === 1 ? '' : 's' } found\n    </Grid>\n  )\n}\n\nconst ResultsFoundCount = connect(mapStateToProps, mapDispatchToProps)(ConnectedResultsFoundCount)\n\nexport default ResultsFoundCount","import { connect } from 'react-redux'\nimport Grid from '@material-ui/core/Grid'\nimport ResultsFoundCount from './ResultsFoundCount'\nimport { expandAllLines, expandLine } from '../../actions/index'\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    lines: state.lines,\n    matches: state.matches,\n    expandedMatches: state.expandedMatches,\n    filteredCharacter: state.filteredCharacter,\n    series: state.series\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    expandAllLines: payload => dispatch(expandAllLines(payload)),\n    expandLine: payload => dispatch(expandLine(payload))    \n  }\n}\n\nfunction ConnectedMatches (props) {\n  return (\n    <Grid item container style={{width: 1024, margin: 'auto', letterSpacing: 0.5}}>\n      <ResultsFoundCount/>\n      <Grid item container data-testid='matches' xs={12}>\n        <Grid item container xs={12} alignItems='center' style={{ padding: 12, textAlign: 'center', marginBottom: 2, fontWeight: 600, letterSpacing: 1 }}>\n          <Grid item xs={1} style={{textDecoration: 'underline'}}>Season</Grid>\n          <Grid item xs={2} style={{textDecoration: 'underline'}}>Episode</Grid>\n          <Grid item xs={2} style={{textDecoration: 'underline'}}>Speaker</Grid>\n          <Grid item xs={6} style={{ textAlign: 'left', textDecoration: 'underline' }}>Line</Grid>\n          <Grid item xs={1} style={{ cursor: 'pointer', color: 'steelblue', fontSize: 10, fontWeight: 500, textAlign: 'right', textDecoration: 'none !important' }}\n              onClick={()=>{ props.expandedMatches.length === props.matches.length ? props.expandAllLines(false) : props.expandAllLines(true) }}>\n                {props.expandedMatches.length === props.matches.length ? 'collapse all' : 'expand all'}\n          </Grid>\n        </Grid>      \n      {\n        props.matches.filter(match=>{\n          if(props.filteredCharacter === null || props.filteredCharacter === match.speaker) {\n            return true\n          } else {\n            return false\n          }\n        }).map((match,matchIndex)=>{\n          const expandedMatch = props.expandedMatches.indexOf(matchIndex) !== -1\n          return (\n            <Grid data-testid={`matches_${match.id}`} \n              id={`quote_${match.season}_${match.episode}`} \n              key={`match_${match.id}`} item container xs={12} \n              // alignItems='center' \n              alignItems='flex-start'\n              style={{ \n                borderRadius: 4, \n                backgroundColor: matchIndex % 2 === 0 ? \"#FFFFFF\" : '#F3F3F3', \n                padding: 12, \n                textAlign: 'center', \n                marginBottom: 0 \n              }}>\n              <Grid item xs={1}>{match.season}</Grid>\n              <Grid item xs={2}>{props.series.filter(o=>{ return Number(o.Season) === Number(match.season) })[Number(match.episode)-1].EpisodeTitle}</Grid>\n              <Grid item xs={2}>{match.speaker}</Grid>\n              <Grid item xs={6} style={{ textAlign: 'left' }}>\n                {(()=>{\n                  if (expandedMatch === true) {\n                    const previousLine = props.lines.filter(o=>{ return Number(o.id) === Number(match.id)-1 })[0]\n                    if(previousLine === undefined ) {\n                      return (\n                        <></>\n                      )\n                    }\n                    return (\n                      <div style={{padding: '0px 0px 12px 0px'}}><b>{previousLine.speaker}</b> {previousLine.line_text}</div>\n                    )\n                  }\n                })()}\n                <b>{expandedMatch === true ? match.speaker + ' ' : ''}</b>{match.line_text}\n                {(()=>{\n                  if (expandedMatch === true) {\n                    const nextLine = props.lines.filter(o=>{ return Number(o.id) === Number(match.id)+1 })[0]\n                    if(nextLine === undefined ) {\n                      return (\n                        <></>\n                      )\n                    }\n                    return (\n                      <div style={{padding: '12px 0px 0px 0px'}}><b>{nextLine.speaker}</b> {nextLine.line_text}</div>\n                    )\n                  }\n                })()}\n              </Grid>\n              <Grid item xs={1} style={{ cursor: 'pointer', color: 'steelblue', fontSize: 10, textAlign: 'right' }}\n                onClick={()=>{ props.expandLine(matchIndex) }}>{ expandedMatch === true ? 'less' : 'more'}</Grid>\n            </Grid>                \n          )                \n        })\n      }\n      </Grid>   \n    </Grid>\n  )\n}\n\nconst Matches = connect(mapStateToProps, mapDispatchToProps)(ConnectedMatches)\n\nexport default Matches","export default __webpack_public_path__ + \"static/media/the-office.b100c584.svg\";","import { connect } from 'react-redux'\nimport { Grid, TextField } from '@material-ui/core'\nimport { findMatches, setQuote } from '../../actions/index'\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    quote: state.quote\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    findMatches: payload => dispatch(findMatches(payload)),\n    setQuote: payload => dispatch(setQuote(payload))\n  }\n}\n\nfunction ConnectedQuoteInput (props) {\n  return (\n    <Grid item xs={12}>\n      <TextField label=\"Quote\" variant=\"outlined\" \n        defaultValue={props.quote} \n        style={{width: 768, marginBottom: 14}}\n        onChange={(event)=>{ \n          props.setQuote({ quote: event.nativeEvent.target.value })\n        }}\n        onKeyUp={(event)=>{\n          if(event.nativeEvent.code === 'Enter' || event.nativeEvent.code === 'NumpadEnter') {\n            props.findMatches({})\n          }                  \n        }}/>\n    </Grid>\n  )\n}\n\nconst QuoteInput = connect(mapStateToProps, mapDispatchToProps)(ConnectedQuoteInput)\n\nexport default QuoteInput","import { connect } from 'react-redux'\nimport { Grid } from '@material-ui/core'\nimport { characterFilter } from '../../actions'\n\nconst mapStateToProps = (state) => {\n  return {\n    treemapLeaves: state.treemapLeaves,\n    filteredCharacter: state.filteredCharacter\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setFilteredCharacter: payload => { dispatch(characterFilter(payload))}\n  }\n}\n\nfunction ConnectedTreemap ({ treemapLeaves, filteredCharacter, setFilteredCharacter }) {\n  return (\n    <Grid item xs={12} style={{ marginBottom: 0 }}>\n      <div style={{ position: 'relative', height: 172, width: 1024, margin: 'auto'}}>\n        {\n          treemapLeaves.map((leaf,leafIdx) => {\n            return (\n              <div \n                key={`treemap_leaf_${leafIdx}`}\n                style={{ \n                  position: 'absolute', \n                  top: leaf.y0, left: leaf.x0, \n                  width: leaf.x1-leaf.x0, height: leaf.y1-leaf.y0, \n                  textAlign: 'left',\n                  boxSizing: 'border-box',\n                  backgroundColor: '#a6cee3',\n                  overflow: 'hidden',\n                  color: '#333',\n                  borderRadius: '4px',\n                  userSelect: 'none',\n                  cursor: 'pointer',\n                  border: filteredCharacter === leaf.data.name ? '1px solid #333' : '1px solid transparent'            \n                }}\n                onClick={()=>{\n                  if(filteredCharacter === null || filteredCharacter !== leaf.data.name) {\n                    setFilteredCharacter(leaf.data.name)\n                  } else {\n                    setFilteredCharacter(null)\n                  }\n                }}\n              >\n                <div style={{\n                  display: 'inline-block',\n                  position: 'absolute',\n                  top: '3px',\n                  left: '5px',\n                  fontSize: 12,\n                  fontWeight: 600\n                }}>\n                  {leaf.data.name} <span style={{fontWeight: 300, fontSize: 12}}>({leaf.data.value})</span> \n                </div>                \n              </div>\n            )\n          })\n        }\n      </div>\n    </Grid>\n  )\n}\n\nconst Treemap = connect(mapStateToProps, mapDispatchToProps)(ConnectedTreemap)\n\nexport default Treemap","export default __webpack_public_path__ + \"static/media/blind-guy-mcsqueezy.a07a56ae.jpeg\";","import React from 'react'\nimport * as d3 from 'd3'\n\nexport default class SpiralScreen extends React.Component {\n\n    constructor (props) {\n      super(props)\n      this.state = {}\n      this.svgRef = React.createRef()\n      this.componentWillUnmountFlag = false\n    }\n\n    componentDidMount() {\n      const w = 512\n      const h = 512\n      const gridSize = 48\n      const strokeWidthMulti = 0.5\n      const wavePeriod = 1500\n      const waveDelay = wavePeriod / gridSize\n      const easeFn = d3.easeElasticInOut\n\n      const svg = d3.select(this.svgRef.current)\n        .attr('viewBox', [0,0,w,h].join(' '))\n        .attr('width', '100%').attr('margin', 'auto')\n        .style('background-color', '#000')\n\n      const defs = svg.append('defs')\n      \n      const lg = defs.append('linearGradient').attr('id', 'text-color-gradient')\n      const stop0 = lg.append('stop')\n        .attr('stop-color', '#FFF')\n        .attr('offset', '0%')\n        .attr('stop-opacity', '0%')\n      const stop1 = lg.append('stop')\n        .attr('stop-color', '#FFF')\n        .attr('offset', '50%')\n        .attr('stop-opacity', '100%')\n      const stop2 = lg.append('stop')\n        .attr('stop-color', '#FFF')\n        .attr('offset', '100%')\n        .attr('stop-opacity', '0%')\n\n      const filterShadow = defs.append('filter').attr('id','filter-shadow-maze-text')\n      \n      const dropShadow = filterShadow.append('feDropShadow')\n        .attr('dx',0).attr('dy',0).attr('stdDeviation', 10)\n        .attr('flood-color','#777')\n\n      defs.append('clipPath').attr('id','clip-mask-circle-bg')\n        .append('circle')\n          .attr('cx', w*0.5).attr('cy', h*0.5).attr('r', w*0.48)\n          .attr('fill','#000')\n\n      const gridScale = d3.scaleLinear().domain([0,gridSize]).range([0,w])\n      const halfGridScale = gridScale(0.5)\n  \n      const gParent = svg.append('g').attr('transform', `translate(${halfGridScale} ${halfGridScale})`)\n        // .attr('clip-path', 'url(#clip-mask-circle-bg)')\n\n      const gText = svg.append('g').attr('transform', `translate(${w*0.5} ${h*0.444})`)\n        .attr('filter', 'url(#filter-shadow-maze-text)')\n\n      const fontSize = w*0.2\n      gText.append('text').text('LOADING')\n        .attr('x', 0).attr('y', 0).attr('dy', '-.1em')\n        .attr('font-size', fontSize)\n        .attr('fill', '#FFF')\n        .attr('font-weight', 700)\n        .attr('text-anchor', 'middle')\n      gText.append('text').text('DATA')\n        .attr('x', 0).attr('y', 0).attr('dy', '.68em')\n        .attr('font-size', fontSize*1.97)\n        .attr('fill', '#FFF')\n        .attr('font-weight', 700)\n        .attr('letter-spacing',-20)\n        .attr('text-anchor', 'middle')\n\n      const multi = 1.4\n\n      const lines = []\n      const linesObject = {}\n\n      d3.range(gridSize).forEach(x=>{\n        d3.range(gridSize).forEach(y=>{\n          const pos = { x: gridScale(x), y: gridScale(y) }\n          const gLocal = gParent.append('g').attr('transform', `translate(${pos.x} ${pos.y})`)\n\n          const line = gLocal.append('line')\n            .datum({x,y})\n            .attr('transform', Math.random() > 0.5 ? 'rotate(45)' : 'rotate(-45)')\n            .attr('x1', 0).attr('y1', -halfGridScale * multi).attr('x2', 0).attr('y2', halfGridScale * multi)\n            .attr('stroke', '#FFF').attr('stroke-width', strokeWidthMulti*(w/gridSize)).attr('stroke-linecap', 'round')\n\n          if(linesObject[x-(gridSize/2)] === undefined) {\n            linesObject[x-(gridSize/2)] = {}\n          }\n          linesObject[x-(gridSize/2)][y-(gridSize/2)] = line\n\n          lines.push(line)\n        })\n      })\n      const self = this\n      function transitionAll () {\n        if(self.componentWillUnmountFlag) {\n          return\n        }\n        lines.forEach(line=>{\n          const p = line.datum()\n          const delay = Math.sqrt( Math.pow((gridSize/2)-p.x,2) + Math.pow((gridSize/2)-p.y,2) )\n          line.transition().delay(d=>delay*waveDelay).duration(1)\n            .attr('stroke', '#FFF')\n            .attr('stroke-width', strokeWidthMulti*(w/gridSize) * 0.25)\n            .transition().delay(0).duration(1500).ease(easeFn)//.ease(d3.easeBounce)\n            .attr('transform', Math.random() > 0.5 ? 'rotate(45)' : 'rotate(-45)')\n            .attr('stroke', '#a6cee3')\n            .attr('stroke-width', strokeWidthMulti*(w/gridSize))\n            .on('end', (d)=>{\n              if(d.x === (gridSize-1) && d.y === (gridSize-1)) {\n                transitionAll()\n              }\n            })\n        })  \n      }\n      transitionAll()\n    }\n\n    componentWillUnmount () {\n      this.componentWillUnmountFlag = true\n    }\n\n    render () {\n      return (\n        <div style={{ textAlign:'center' }}>\n          <svg ref={this.svgRef}/>\n        </div>\n      )\n    }\n\n}","import Bubbles from './LineSearch-components/Bubbles'\nimport { connect } from \"react-redux\"\nimport Grid from '@material-ui/core/Grid'\nimport Instructions from './LineSearch-components/Instructions'\nimport Matches from './LineSearch-components/Matches'\nimport OfficeLogo from '../../img/the-office.svg'\nimport QuoteInput from './LineSearch-components/QuoteInput'\n// import StateDebug from './StateDebug'\nimport Treemap from './LineSearch-components/Treemap'\nimport BlindGuyMcSqueezy from '../../img/blind-guy-mcsqueezy.jpeg'\nimport LoadingScreen from './loading-screens/Maze'\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    finishedLoading: state.finishedLoading,\n    lines: state.lines,    \n    matches: state.matches,\n    series: state.series    \n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {}\n}\n\n// todo\n// loading screen\n// max results\n// handle no results found\n// tests\n  // treemap\n  // bubbles\n  // matches\n    // expanded\n  \nconst ConnectedLineSearch = function (props) {\n  return (\n    <Grid container style={{ textAlign: 'center', marginBottom: 1024, marginTop: 16 }}>\n      <Grid item xs={12}>\n        <img src={OfficeLogo} style={{ width: 820, margin: 'auto'}} alt='logo for the television series: the office'/>\n      </Grid>\n      {\n        (()=>{\n          if(props.finishedLoading === false) {\n            return (\n              <Grid item xs={6} style={{ margin: 'auto', marginTop: 12 }}>\n                <LoadingScreen/>\n              </Grid>\n            )\n          } else {\n            return (\n              <Grid container item xs={12}>\n                <Grid container item justifyContent='center' style={{margin: 'auto', width: 820}}>\n                  <Instructions/>\n                  <QuoteInput/>\n                </Grid>      \n                <Grid container item xs={12} style={{ display: props.matches.length === 0 ? null : 'none' }}>\n                  <Grid item xs={12} style={{ marginBottom: 24 }}>No results found.  Try another search term.</Grid>\n                  <Grid item xs={12}><img src={BlindGuyMcSqueezy} alt='Michael Scott`s improv character Blind Guy McSqueezy'/></Grid>        \n                </Grid>\n                <Grid container item xs={12} style={{ display: props.matches.length === 0 ? 'none' : null }}>\n                  <Treemap/>\n                  <Bubbles/>            \n                  <Matches/>\n                </Grid>\n              </Grid>\n            )\n          }\n        })()\n      }\n    </Grid>\n  )\n}\n\nconst LineSearch = connect(mapStateToProps, mapDispatchToProps)(ConnectedLineSearch)\n\nexport default LineSearch","import { addLines, addSeries, findMatches, finishLoading } from '../actions/index'\nimport { connect } from \"react-redux\"\nimport { csv } from 'd3'\nimport DataOfficeLines from '../../data/the-office-lines-scripts.csv'\nimport DataOfficeSeries from '../../data/the-office-series.csv'\nimport LineSearch from './LineSearch'\n\nconst mapStateToProps = (state, ownProps) => {\n  return {}\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addLines: payload => dispatch(addLines(payload)),\n    addSeries: payload => dispatch(addSeries(payload)),\n    finishLoading: payload => dispatch(finishLoading(payload)),\n    findMatches: payload => dispatch(findMatches(payload))\n  }\n}\n\nconst ConnectedApp = function ({ addLines, addSeries, findMatches, finishLoading }) {\n\n  csv(DataOfficeLines).then(d=>{\n    addLines(d)\n    csv(DataOfficeSeries).then(d=>{\n      addSeries(d)\n      findMatches()\n      finishLoading()\n    })  \n  })\n\n  return (\n    <LineSearch/>\n  )\n}\n\nconst App = connect(mapStateToProps, mapDispatchToProps)(ConnectedApp)\n\nexport default App","import { Provider } from \"react-redux\";\nimport store from \"./js/store/index\";\nimport Application from \"./js/components/App\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Application/>\n    </Provider>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}